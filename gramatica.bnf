# Gramática, por VALDIR DIAS DA SILVA JÚNIOR e LUIZ DAVI MENDES DE MATOS


# Dados básicos

<max-letter> ::=| "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"

<min-letter> ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"

<digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

<numero> ::= <digit> {<digit>}*

<identificador-var> ::= "v"{<max-letter> | <digit> | <min-letter>}*

<identificador-func> ::= "f"{<max-letter> | <digit> | <min-letter>}*

<identificador-proc> ::= "p"{<max-letter> | <digit> | <min-letter>}*

<boolean> ::= "true" | "false"

<especificador-tipo> ::= "int" | "boolean"

_____________________________________________________________________________________________________________________________________________________________________________

# Variáveis

<var-declaracao> ::= <var> ";"

<var> ::= <especificador-tipo> <identificador-var> <attr-var>

<attr-var> ::= "=" <expression>

_____________________________________________________________________________________________________________________________________________________________________________


# Funções

<funcao-declaracao> ::= "func" <especificador-tipo> <identificador-func> "(" <lista-parametros> ")" "{"
                            <statement>
                            "return " <var>
                        "}"
                        |

                        "func" <especificador-tipo> <identificador-func> "(" ")" "{"
                            <statement>
                            "return " <var>
                        "}"

<lista-parametros> ::= <parametros-declaracao> | <parametros-declaracao> "," <lista-parametros>

<parametros-declaracao> ::= <especificador-tipo> <identificador-var>

_____________________________________________________________________________________________________________________________________________________________________________

# Procedimento

<procedimento-declaracao> ::= "proc" <identificador-proc> "(" <lista-parametros> ")" "{"
                                    <statement>
                                "}"

_____________________________________________________________________________________________________________________________________________________________________________

# Start

<start> ::= [+]<statement-list>

_____________________________________________________________________________________________________________________________________________________________________________

# Statements e Expression

<statement-list> ::= <statement> <statement-list> | ε

<statement> ::= <var-declaracao> # Cria variável
| <funcao-declaracao> # Cria função
| <procedimento-declaracao> # Cria procedimento
| "if" "(" <condicao> ")" "{" <statement-list> "}" <if-aux> # IF
| "while" "(" <condicao> ")" "{" <statement-list> "}" # WHILE
| "puts" <identificador-var>";"
| "puts" <identificador-func>";" #nao pede na lista
| "puts" <numero>";"
| <identificador-func>";" # Chama função
| <identificador-proc>";" # Chama procedimento
| "break"";" # Dentro de laço apenas, sintático
| "continue"";" # Dentro de laço apenas, sintático

<if-aux> ::= 'else' '{'<statement>'}'

<expression> ::= <logical-expression>
| <arithmetic-expression>
| <numero>
| <boolean>
| <identificador-func>
| <identificador-var>

_____________________________________________________________________________________________________________________________________________________________________________

# Lógico

<logical-expression> ::= <termo> <op-condicional> <termo>

<termo> ::= <identificador-var> | <numero> | <identificador-func>

_____________________________________________________________________________________________________________________________________________________________________________

# Aritmético

<arithmetic-expression> ::= <termo-aritmetico> *{( "+" | "-" ) <termo-aritmetico>}

<termo-aritmetico> ::= <fator> *{ ( "*" | "/" ) <fator> }

<fator> ::= <identificador-var> | <numero> | "(" <arithmetic-expression> ")"

_____________________________________________________________________________________________________________________________________________________________________________

# Condicional

<condicao> ::= <expression> <condicao-aux>

<condicao-aux> ::= <op-condicional> <condicao> | ε

<op-condicional> ::= "=="| "<>" | "<" |"<=" | ">" | ">="